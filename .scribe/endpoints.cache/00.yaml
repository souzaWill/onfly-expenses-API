## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Registra um novo usuario'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: validation.email.
        required: true
        example: winnifred.ernser@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: impedit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      c_password:
        name: c_password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: praesentium
      email: winnifred.ernser@example.net
      password: impedit
      c_password: sunt
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "success": true,
                "data": {
                    "token": "1|b4HnecmVF2PdLXO8fFK5ZgkfxmNULocubD6EKoYDdbc0aca3",
                    "name": "natus"
                },
                "message": "User registered successfully."
            }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Permite que um usuário faça login na aplicação.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'O endereço de e-mail do usuário. Exemplo: user@example.com'
        required: true
        example: stroman.meggie@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'A senha do usuário. Exemplo: secret'
        required: true
        example: '*gC,]*vRLXR7N6c_'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: stroman.meggie@example.org
      password: '*gC,]*vRLXR7N6c_'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "data": {
                 "token": "1|abc1234567...",
                 "name": "John Doe"
             },
             "message": "User login successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
             "success": false,
             "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zd3566Db48ghEc1PefVaavk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout do usuário'
      description: 'Revoga o token de autenticação atual do usuário, efetuando o logout.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "status": "success",
             "message": "User logged out successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gdeD8PcabV6vaEZk651h43f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/expenses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Expenses
      subgroupDescription: ''
      title: 'Listar Despesas'
      description: 'Retorna a listagem de todas as despesas acessíveis pelo usuário autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": [
                 {
                     "id": 1,
                     "description": "Aluguel",
                     "value": "1.500,00",
                     "date": "2024-10-09",
                     "user": {
                         "id": 1,
                         "name": "John Doe",
                         "email": "johndoe@example.com"
                     }
                 },
                 {
                     "id": 2,
                     "description": "Conta de luz",
                     "value": "120,50",
                     "date": "2024-10-08",
                     "user": {
                         "id": 2,
                         "name": "Jane Doe",
                         "email": "janedoe@example.com"
                     }
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dVc346fhDv8bg5kZ1a6eEaP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/expenses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Expenses
      subgroupDescription: ''
      title: 'Cadastrar Despesa'
      description: 'Cria uma nova despesa para o usuário autenticado e envia uma notificação de email ao usuário.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'Descrição da despesa. Exemplo: Aluguel'
        required: true
        example: 'Iste qui et mollitia et minus doloremque fugit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'Data da despesa. Exemplo: 2024-10-09'
        required: true
        example: enim
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      value:
        name: value
        description: 'Valor da despesa. Exemplo: 1500.00'
        required: true
        example: 4.6338
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      description: 'Iste qui et mollitia et minus doloremque fugit.'
      user_id: illo
      date: enim
      value: 4.6338
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "data": {
                 "id": 1,
                 "description": "Aluguel",
                 "value": "1.500,00",
                 "date": "2024-10-09",
                 "user": {
                     "id": 1,
                     "name": "John Doe",
                     "email": "johndoe@example.com"
                 }
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 36ekaav6g1b4PD5fhc8VZEd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Expenses
      subgroupDescription: ''
      title: 'Exibir Detalhes da Despesa'
      description: 'Retorna os detalhes de uma despesa específica se o usuário tiver permissão para visualizá-la.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      expense:
        name: expense
        description: 'O ID da despesa. Exemplo: 1'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
      expense: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 1,
                 "description": "Aluguel",
                 "value": "1.500,00",
                 "date": "2024-10-09",
                 "user": {
                     "id": 1,
                     "name": "John Doe",
                     "email": "johndoe@example.com"
                 }
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
             "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "No query results for model [Expense] 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DcPev6Zkhb5E6df8Vgaa413'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Expenses
      subgroupDescription: ''
      title: 'Atualizar Despesa'
      description: 'Atualiza os dados de uma despesa específica.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      expense:
        name: expense
        description: 'O ID da despesa que será atualizada. Exemplo: 1'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
      expense: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      description:
        name: description
        description: 'A nova descrição da despesa. Exemplo: Aluguel Atualizado'
        required: true
        example: 'Debitis quo itaque quos.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'A nova data da despesa. Exemplo: 2024-10-09'
        required: true
        example: omnis
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      value:
        name: value
        description: 'O novo valor da despesa. Exemplo: 1600.00'
        required: true
        example: 0.80983867
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      description: 'Debitis quo itaque quos.'
      date: omnis
      value: 0.80983867
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 1,
                 "description": "Aluguel Atualizado",
                 "value": "1.600,00",
                 "date": "2024-10-09",
                 "user": {
                     "id": 1,
                     "name": "John Doe",
                     "email": "johndoe@example.com"
                 }
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
             "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "description": [
                     "The description field is required."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kc38bfaaPZ6hgE5d14D6veV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/expenses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Expenses
      subgroupDescription: ''
      title: 'Deletar Despesa'
      description: 'Exclui uma despesa específica.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      expense:
        name: expense
        description: 'O ID da despesa que será deletada. Exemplo: 1'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
      expense: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
             "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "No query results for model [Expense] 1"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P1aZ6E3hgebkf58dDVv4ca6'
    controller: null
    method: null
    route: null
    custom: []
